// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("BaseStatsId")
                        .HasColumnType("int");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CharacterRace")
                        .HasColumnType("int");

                    b.Property<int>("CurrentStatsId")
                        .HasColumnType("int");

                    b.Property<string>("DistinguishingMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EyeColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HairColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSiblings")
                        .HasColumnType("int");

                    b.Property<string>("StarSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaseStatsId")
                        .IsUnique();

                    b.HasIndex("CurrentStatsId")
                        .IsUnique();

                    b.ToTable("Characters", (string)null);
                });

            modelBuilder.Entity("Domain.Stats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("A")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("K")
                        .HasColumnType("int");

                    b.Property<int>("Mag")
                        .HasColumnType("int");

                    b.Property<int>("Odp")
                        .HasColumnType("int");

                    b.Property<int>("Ogd")
                        .HasColumnType("int");

                    b.Property<int>("PO")
                        .HasColumnType("int");

                    b.Property<int>("PP")
                        .HasColumnType("int");

                    b.Property<int>("S")
                        .HasColumnType("int");

                    b.Property<int>("Sw")
                        .HasColumnType("int");

                    b.Property<int>("Sz")
                        .HasColumnType("int");

                    b.Property<int>("US")
                        .HasColumnType("int");

                    b.Property<int>("WW")
                        .HasColumnType("int");

                    b.Property<int>("Wt")
                        .HasColumnType("int");

                    b.Property<int>("Zr")
                        .HasColumnType("int");

                    b.Property<int>("Zyw")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stats", (string)null);
                });

            modelBuilder.Entity("Domain.Character", b =>
                {
                    b.HasOne("Domain.Stats", "BaseStats")
                        .WithOne()
                        .HasForeignKey("Domain.Character", "BaseStatsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Stats", "CurrentStats")
                        .WithOne()
                        .HasForeignKey("Domain.Character", "CurrentStatsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BaseStats");

                    b.Navigation("CurrentStats");
                });
#pragma warning restore 612, 618
        }
    }
}
